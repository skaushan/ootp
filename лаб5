class LoggerSingleton
{
    private LoggerSingleton() { }
    private int _logCount = 0;
    private static LoggerSingleton _loggerSingletonInstance = null;
    public static LoggerSingleton GetInstance()
    {
        if (_loggerSingletonInstance == null)
        {
           _loggerSingletonInstance = new LoggerSingleton();
        }
        return _loggerSingletonInstance;
    }
    public void Log(String message)
    {
        Console.WriteLine(_logCount + ": " + message);
        _logCount++;
    }
}
public static void DoHardWork()
    {
        LoggerSingleton logger = LoggerSingleton.GetInstance();
        HardProcessor processor = new HardProcessor(1);
        logger.Log("Hard work started...");
        processor.ProcessTo(5);
        logger.Log("Hard work finished...");
    }
class HardProcessor
{
    private int _start;
    public HardProcessor(int start)
    {
        _start = start;
        LoggerSingleton.GetInstance().Log("Processor just created.");
    }
    public int ProcessTo(int end)
    {
        int sum = 0;
        for (int i = _start; i <= end; ++i)
        {
            sum += i;
        }
        LoggerSingleton.GetInstance().Log(
                             "Processor just calculated some value: " + sum);
        return sum;
    }
}
0: Processor just created.
1: Hard work started...
2: Processor just calculated some value: 15
3: Hard work finished...
private static LoggerSingleton _loggerSingletonInstance = new LoggerSingleton();
public class ThreadSafeLoggerSingleton
{
    private ThreadSafeLoggerSingleton()
    {
        // Читаємо дані із якогось файлу і дістаємо номер останнього запису
        // _logCount = вичитане значення
    }
    private int _logCount = 0;
    private static ThreadSafeLoggerSingleton _loggerInstance;
    private static readonly object locker = new object();

    public static ThreadSafeLoggerSingleton GetInstance()
    {
        lock (locker)
        {
            if (_loggerInstance == null)
            {
                _loggerInstance = new ThreadSafeLoggerSingleton();
            }
        }
        return _loggerInstance;
    }

    public void Log(String message)
    {
        Console.WriteLine(_logCount + ": " + message);
        _logCount++;
    }
}
